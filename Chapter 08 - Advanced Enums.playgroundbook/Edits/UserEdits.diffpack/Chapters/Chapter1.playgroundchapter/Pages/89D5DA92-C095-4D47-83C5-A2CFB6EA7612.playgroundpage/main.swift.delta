<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import Foundation

// Problem: Let's combine the best of the best

protocol LifeSpan { 
    var numberOfHearts: Int { get }
    mutating func increaseHeart()
    mutating func getAttacked()
}

enum Player: LifeSpan {
    case dead
    case alive(currentHeart: Int)
    
    var numberOfHearts: Int { 
        switch self { 
        case .dead: 
            return 0
        case let .alive(numberOfHearts):
            return numberOfHearts
        }
    }
    
    mutating func increaseHeart() {
        switch self {
        case .dead:
            self = .alive(currentHeart: 1)
        case let .alive(numberOfHearts):
            self = .alive(currentHeart: numberOfHearts + 1)
        }
    }
    
    mutating func getAttacked() {
        switch self {
        case .alive(let numberOfHearts):
            if numberOfHearts &lt;= 1 { 
                self = .dead
            } else { 
                self = .alive(currentHeart: numberOfHearts - 1)
            }
        case .dead:
            break
        }
    }
}

// MARK: - Play Game
var state = Player.dead
state.increaseHeart()
state.numberOfHearts
state.increaseHeart()
state.getAttacked()
state.getAttacked()
state.numberOfHearts

// MARK: - Custom Operations (Taste)
enum GameAction {
    case Start
    case Pause
    case Stop
    case Restart(delay: Int)
}

func ==(lhs: GameAction, rhs: GameAction) -&gt; Bool { 
    switch (lhs, rhs) {
    case (.Start, .Start), (.Pause, .Pause), (.Stop, .Stop):
        return true
    case let (.Restart(lhsDelay), .Restart(rhsDelay)):
        return lhsDelay == rhsDelay
    default: 
        return false
    }
}

GameAction.Restart(delay: 10) == GameAction.Restart(delay: 10)
</string>
			<key>ModifiedRange</key>
			<string>{0, 1685}</string>
			<key>OriginalContent</key>
			<string>
</string>
			<key>OriginalRange</key>
			<string>{0, 1}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
