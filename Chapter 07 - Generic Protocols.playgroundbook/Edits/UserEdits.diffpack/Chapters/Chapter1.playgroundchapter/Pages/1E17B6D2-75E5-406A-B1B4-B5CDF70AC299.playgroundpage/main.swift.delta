<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import Foundation

// Design Protocol
protocol FamilyProtocol {
    associatedtype familyType = Int
    var familyMembers: [familyType] { get set }
}

// Design Struct
struct NumberFamily: FamilyProtocol { 
    var familyMembers: [Int] = [1, 2, 3]
}

let numberFam = NumberFamily() // familyType == Int

// Override Associated Type Directly
struct NormalFamily: FamilyProtocol {
    typealias familyType = String
    var familyMembers = ["Lucas", "Inocencio"]
}

// How to apply generic protocol with generics
struct LeeFamily&lt;T&gt;: FamilyProtocol { 
    var familyMembers: [T] = [] // familyType --&gt; T
}

let family = LeeFamily(familyMembers: ["Xaninho", "Estrela", "Soneca"])
// 1. T becomes String ["Xaninho", "Estrela", "Soneca"]
// 2. familyType now becomes String based on T 
</string>
			<key>ModifiedRange</key>
			<string>{0, 780}</string>
			<key>OriginalContent</key>
			<string>
</string>
			<key>OriginalRange</key>
			<string>{0, 1}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
